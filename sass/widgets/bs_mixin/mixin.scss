// @include font-size(number);
$base-size:14;
@mixin font-size($value: $base-size, $context: $base-size) {
    font-size: ($value / $context) + 0em;
}
@mixin font-size-important($value: $base-size, $context: $base-size) {
    font-size: ($value / $context) + 0em!important;
}
// @include clearfix()
@mixin clearfix() {
    *zoom: 1;
    &:before,
    &:after {
        display: table;
        content: "";
    }
    &:after {
        clear: both;
    }
} 
// @include make-bullit($color: red)
@mixin make-bullit($color: red){ 
    ul.bullit{
        li{@include font-size(15); line-height: 20px;display: table-row;}
        li:before {
            content: '\2022';
            color: $color; /* or whatever color you prefer */
            display: table-cell;
            text-align: right;
            padding-right: .3em;

        }
    }
}
//@include text-shadow(x y blur color);
@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
    text-shadow: $string;
}
//@include box-shadow(x y blur spread color);
@mixin box-shadow ($string: 0 0 1px 2px rgba(0, 0, 0, .25)) {
    -webkit-box-shadow: $string;
    -moz-box-shadow:    $string;
    box-shadow:         $string;
}
//@include box-shadow(x y blur spread color, x y blur spread color);
@mixin box-shadow-2 ($string, $string2) {
    -webkit-box-shadow: $string, $string2;
    -moz-box-shadow:    $string, $string2;
    box-shadow:         $string, $string2;
}
//@include box-shadow(x y blur spread color, x y blur color, x y blur spread color);
@mixin box-shadow-3 ($string,$string2,$string3) {
    -webkit-box-shadow: $string, $string2, $string3;
    -moz-box-shadow:    $string, $string2, $string3;
    box-shadow:         $string, $string2, $string3;
}
//@include drop-shadow(x, y, blur, spread, alpha);
@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
    -webkit-box-shadow:	$x $y $blur $spread rgba(0, 0, 0, $alpha);
    -moz-box-shadow:	$x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow:		$x $y $blur $spread rgba(0, 0, 0, $alpha);
}

//@include drop-shadowC(x, y, blur, spread, color);
@mixin drop-shadowC ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $color:rgba(0, 0, 0, .25)) {
    -webkit-box-shadow:	$x $y $blur $spread $color;
    -moz-box-shadow:	$x $y $blur $spread $color;
    box-shadow:		$x $y $blur $spread $color;
}


//@include inner-shadow(x, y, blur, spread, alpha);
@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
    -webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
    -moz-box-shadow:    inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow:         inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

//@include box-sizing(x, y, blur, spread, alpha);
@mixin box-sizing ($type: border-box) {
    -webkit-box-sizing: $type;
    -moz-box-sizing:    $type;
    box-sizing:         $type;
}

@mixin display-flex(){
	-ms-box-orient: horizontal;
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -moz-flex;
	display: -webkit-flex;
	display: flex;
}
@mixin justify-content($type: space-around){
	-webkit-justify-content: $type;
	justify-content: $type;
}
@mixin border-radius ($radius: 5px) {
    -webkit-border-radius: $radius;
    -moz-border-radius:    $radius;
    border-radius:         $radius;

    -moz-background-clip:    padding;
    -webkit-background-clip: padding-box;
    background-clip:         padding-box;
}
@mixin border-radiuses ($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
    -webkit-border-top-right-radius:    $topright;
    -webkit-border-bottom-right-radius: $bottomright;
    -webkit-border-bottom-left-radius:  $bottomleft;
    -webkit-border-top-left-radius:     $topleft;

    -moz-border-radius-topright:        $topright;
    -moz-border-radius-bottomright:     $bottomright;
    -moz-border-radius-bottomleft:      $bottomleft;
    -moz-border-radius-topleft:         $topleft;

    border-top-right-radius:            $topright;
    border-bottom-right-radius:         $bottomright;
    border-bottom-left-radius:          $bottomleft;
    border-top-left-radius:             $topleft;

    -moz-background-clip:    padding; 
    -webkit-background-clip: padding-box; 
    background-clip:         padding-box; 
}

@mixin opacity ($opacity: $color) {
    -webkit-opacity: 	$opacity;
    -moz-opacity: 		$opacity;
    opacity: 		$opacity;
}

@mixin gradient ($startColor: #eee, $endColor: white) {
    background-color: $startColor;
    background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background: -webkit-linear-gradient(top, $startColor, $endColor);
    background: -moz-linear-gradient(top, $startColor, $endColor);
    background: -ms-linear-gradient(top, $startColor, $endColor);
    background: -o-linear-gradient(top, $startColor, $endColor);
}
@mixin horizontal-gradient ($startColor: #eee, $endColor: white) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);
    background-image: -moz-linear-gradient(left, $startColor, $endColor);
    background-image: -ms-linear-gradient(left, $startColor, $endColor);
    background-image: -o-linear-gradient(left, $startColor, $endColor);
}

@mixin animation ($name, $duration: 300ms, $delay: 0, $ease: ease) {
    -webkit-animation: $name $duration $delay $ease;
    -moz-animation:    $name $duration $delay $ease;
    -ms-animation:     $name $duration $delay $ease;
}

@mixin transition ($transition:'') {
    -webkit-transition: #{$transition};  
    -moz-transition:    #{$transition};
    -ms-transition:     #{$transition}; 
    -o-transition:      #{$transition};  
}
@mixin backface(){
    backface-visibility:hidden;
    -webkit-backface-visibility:hidden; /* Chrome and Safari */
    -moz-backface-visibility:hidden; /* Firefox */
    -ms-backface-visibility:hidden; /* Internet Explorer */
}
@mixin hidden{
    display:none;
    visibility:hidden;
}
@mixin hide{
    display: block;
    height:0px;
    width:0px;
    @include transition(display .4s ease-in);
    @include transition(visibility .4s ease-in);
    display:none;
    visibility:hidden;
}
@mixin show{
    display:inherit;
    visibility:visible;
}
@mixin transform($string) {
    -webkit-transform: $string;
    -moz-transform: $string;
    -ms-transform: $string;
    -o-transform: $string;
    transform: $string;
}
@mixin transform-important ($string){
    -webkit-transform: $string;
    -moz-transform: 	 $string!important;
    -ms-transform: 		 $string!important;
    -o-transform: 		 $string!important;
}
@mixin scale ($factor) {
    -webkit-transform: scale($factor);
    -moz-transform: 	 scale($factor);
    -ms-transform: 		 scale($factor);
    -o-transform: 		 scale($factor);
}
@mixin rotate ($deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: 	 rotate($deg);
    -ms-transform: 		 rotate($deg);
    -o-transform: 		 rotate($deg);
}
@mixin skew ($deg, $deg2) {
    -webkit-transform:       skew($deg, $deg2);
    -moz-transform: 	 skew($deg, $deg2);
    -ms-transform: 		 skew($deg, $deg2);
    -o-transform: 		 skew($deg, $deg2);
}
@mixin translate ($x, $y:0) {
    -webkit-transform:       translate($x, $y);
    -moz-transform: 	 translate($x, $y);
    -ms-transform: 		 translate($x, $y);
    -o-transform: 		 translate($x, $y);
}
@mixin translate3d ($x, $y: 0, $z: 0) {
    -webkit-transform:       translate3d($x, $y, $z);
    -moz-transform: 	 translate3d($x, $y, $z);
    -ms-transform: 		 translate3d($x, $y, $z);
    -o-transform: 		 translate3d($x, $y, $z);
}
@mixin perspective ($value: 1000) {
    -webkit-perspective: 	$value;
    -moz-perspective: 	$value;
    -ms-perspective: 	$value;
    perspective: 		$value;
}
@mixin transform-origin ($x:center, $y:center) {
    -webkit-transform-origin: $x $y;
    -moz-transform-origin:    $x $y;
    -ms-transform-origin:     $x $y;
    -o-transform-origin:      $x $y;
}

@mixin placeholder($color: $placeholderText) {
    :-moz-placeholder {
        color: $color;
    }
    ::-webkit-input-placeholder {
        color: $color;
    }
}
//MOBILE MIXINS
